#if !defined(LIBHASHA_KECCAK_PERM_H_LOADED)
#define LIBHASHA_KECCAK_PERM_H_LOADED

#include "export.h"
#include "std.h"

#if !defined(SHA3_KECCAK_ROUNDS)
#define SHA3_KECCAK_ROUNDS 24
#endif // KECCAK_ROUNDS

HASHA_EXTERN_C_BEG

#if !defined(SHA3_KECCAK_ROUNDS_CONSTANTS_IMPLEMENTATION)
#define SHA3_KECCAK_ROUNDS_CONSTANTS_IMPLEMENTATION
static const uint64_t SHA3_KECCAK_ROUND_CONSTANTS[SHA3_KECCAK_ROUNDS] = {
    0x0000000000000001ULL, 0x0000000000008082ULL, 0x800000000000808aULL, 0x8000000080008000ULL,
    0x000000000000808bULL, 0x0000000080000001ULL, 0x8000000080008081ULL, 0x8000000000008009ULL,
    0x000000000000008aULL, 0x0000000000000088ULL, 0x0000000080008009ULL, 0x000000008000000aULL,
    0x000000008000808bULL, 0x800000000000008bULL, 0x8000000000008089ULL, 0x8000000000008003ULL,
    0x8000000000008002ULL, 0x8000000000000080ULL, 0x000000000000800aULL, 0x800000008000000aULL,
    0x8000000080008081ULL, 0x8000000000008080ULL, 0x0000000080000001ULL, 0x8000000080008008ULL
};
#endif // SHA3_KECCAK_ROUNDS_CONSTANTS_IMPLEMENTATION

#if !defined(SHA3_RHO_OFFSETS_IMPLEMENTATION)
#define SHA3_RHO_OFFSETS_IMPLEMENTATION
static const int SHA3_RHO_OFFSETS[5][5] = {
    { 0, 36, 3, 41, 18 },
    { 1, 44, 10, 45, 2 },
    { 62, 6, 43, 15, 61 },
    { 28, 55, 25, 21, 56 },
    { 27, 20, 39, 8, 14 }
};
#endif // SHA3_RHO_OFFSETS_IMPLEMENTATION

HASHA_PUBLIC_FUNC void keccak_permutation(uint64_t *state);

HASHA_EXTERN_C_END

#endif // LIBHASHA_KECCAK_PERM_H_LOADED
